syntax = "proto3";
package incubus.merkledrop.v1beta1;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/v1beta1/coin.proto";
import "incubus/merkledrop/v1beta1/merkledrop.proto";
import "incubus/merkledrop/v1beta1/params.proto";

option go_package = "github.com/nephirim/go-incubus/x/merkledrop/types";
option (gogoproto.goproto_getters_all) = false;

service Query {
  rpc Merkledrop(QueryMerkledropRequest) returns (QueryMerkledropResponse) {
    option (google.api.http).get = "/incubus/merkledrop/v1beta1/markledrops/{id}";
  }

  rpc IndexClaimed(QueryIndexClaimedRequest) returns (QueryIndexClaimedResponse) {
    option (google.api.http).get = "/incubus/merkledrop/v1beta1/markledrops/{id}/index_claimed/{index}";
  }

  // Params queries the fantoken parameters
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/incubus/merkledrop/v1beta1/params";
  }
}

message QueryMerkledropRequest { uint64 id = 1; }

message QueryMerkledropResponse {
  incubus.merkledrop.v1beta1.Merkledrop merkledrop = 1 [ (gogoproto.nullable) = false ];
}

message QueryIndexClaimedRequest {
  uint64 id = 1;
  uint64 index = 2;
}

message QueryIndexClaimedResponse {
  bool is_claimed = 1 [
    (gogoproto.moretags) = "yaml:\"is_claimed\""
  ];
}

// QueryParametersRequest is request type for the Query/Parameters RPC method
message QueryParamsRequest {}

// QueryParametersResponse is response type for the Query/Parameters RPC method
message QueryParamsResponse {
  incubus.merkledrop.v1beta1.Params params = 1 [ (gogoproto.nullable) = false ];
}